#
# Git smart PROMPT
#
      __CLR_BLACK="\[\033[0;30m\]"
        __CLR_RED="\[\033[0;31m\]"
      __CLR_GREEN="\[\033[0;32m\]"
     __CLR_YELLOW="\[\033[0;33m\]"
       __CLR_BLUE="\[\033[0;34m\]"
     __CLR_PURPLE="\[\033[0;35m\]"
       __CLR_CYAN="\[\033[0;36m\]"
      __CLR_WHITE="\[\033[0;37m\]"
__CLR_LIGHT_BLACK="\[\033[1;30m\]"
   __CLR_LIGHT_RED="\[\033[1;31m\]"
 __CLR_LIGHT_GREEN="\[\033[1;32m\]"
__CLR_LIGHT_YELLOW="\[\033[1;33m\]"
  __CLR_LIGHT_BLUE="\[\033[1;34m\]"
__CLR_LIGHT_PURPLE="\[\033[1;35m\]"
  __CLR_LIGHT_CYAN="\[\033[1;36m\]"
  __CLR_LIGHT_GRAY="\[\033[1;37m\]"
 __CLR_NONE="\[\e[0m\]"


function _parse_git_branch {
# git rev-parse --git-dir &> /dev/null
    local git_status branch_pattern remote_pattern diverge_pattern state
    git_status="$(git status 2> /dev/null)"
    branch_pattern="On branch ([^${IFS}]*)"
    remote_pattern="Your branch is (.*) of"
    diverge_pattern="Your branch and (.*) have diverged"
    state=""
    if [[ ${git_status} =~ ${branch_pattern} ]]; then
        branch=${BASH_REMATCH[1]}
        # if [[ ! ${git_status} =~ "working [:alnum:]* clean" ]]; then
        if [[ ! ${git_status} =~ "nothing to commit" ]]; then
            state="${__CLR_RED}±"
        fi
        # add an else if or two here if you want to get more specific
        if [[ ${git_status} =~ ${remote_pattern} ]]; then
            if [[ ${BASH_REMATCH[1]} == "ahead" ]]; then
                remote="${__CLR_YELLOW}↑"
            else
                remote="${__CLR_YELLOW}↓"
            fi
        fi
        if [[ ${git_status} =~ ${diverge_pattern} ]]; then
            remote="${__CLR_YELLOW}↕"
        fi
        echo " ${__CLR_GREEN}(${branch}${remote}${state}${__CLR_GREEN})"
    fi
}

function _prompt_func() {
    local prompt="${__CLR_LIGHT_PURPLE}\W$(_parse_git_branch)"
    if [ $ITERM_SESSION_ID ]; then
        PS1="${prompt}${__CLR_LIGHT_BLACK}/${__CLR_NONE}\[\033];${PWD##*/}\007 "
    else
        PS1="${prompt}${__CLR_LIGHT_BLACK}/${__CLR_NONE}\[\033];${PWD##*/}\007 "
    fi
#    previous_return_value=$?;
#    echo "prev: ${previous_return_value}"
#    if [[ $previous_return_value -eq 0 ]]
#    then
#        PS1="${prompt}\$${__CLR_NONE} "
#    else
#        PS1="${prompt}${__CLR_RED}\$${__CLR_NONE} "
#    fi
}

#PS1='[\[\e[1;34m\]\w\[\e[m\]]\n\[\e[1;32m\]\$\[\e[m\] \[\e[1;37m\]'
#PS1='[\[\e[1;34m\]\w\[\e[m\]]\[\e[1;32m\]\$\[\e[m\] \[\e[1;37m\]'

PROMPT_COMMAND=_prompt_func
